# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
# set $term alacritty
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu fuzzel -b 000000aa -t ddddddff
# set $menu wofi --show run

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/default.png fill
# output * bg ~/Pictures/FAveUivVQAkrx3K.jfif center
output * bg ~/windows/Users/ahmad/Pictures/Saved Pictures/1636218268078.png fill
# exec swaybg -i /home/azazen/Pictures/FAveUivVQAkrx3K.jfif
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
  input "1739:52781:SYNA0001:00_06CB:CE2D_Touchpad" {
      dwt enabled
      tap enabled
      natural_scroll enabled
      middle_emulation enabled
  }
input "AT_Translated_Set_2_keyboard" {
    xkb_layout us
    # xkb_variant colemak_dh
    # xkb_options grp:alts_toggle
}
# input "type:keyboard" {
#     xkb_layout us
#     xkb_variant colemak_dh
#     xkb_options grp:alts_toggle
# }

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
    bindsym $mod+Shift+e exec wlogout
#
# Moving around:
#
    # # Move your focus around
    # bindsym $mod+$left focus left
    # bindsym $mod+$down focus down
    # bindsym $mod+$up focus up
    # bindsym $mod+$right focus right
    # # Or use $mod+[up|down|left|right]
    # bindsym $mod+Left focus left
    # bindsym $mod+Down focus down
    # bindsym $mod+Up focus up
    # bindsym $mod+Right focus right
    # sway-overfocus (tab)
    bindsym $mod+h exec sway-overfocus split-lt float-lt output-ls
    bindsym $mod+j exec sway-overfocus split-dt float-dt output-ds
    bindsym $mod+k exec sway-overfocus split-ut float-ut output-us
    bindsym $mod+l exec sway-overfocus split-rt float-rt output-rs
    bindsym $mod+Left exec sway-overfocus split-lt float-lt output-ls
    bindsym $mod+Down exec sway-overfocus split-dt float-dt output-ds
    bindsym $mod+Up exec sway-overfocus split-ut float-ut output-us
    bindsym $mod+Right exec sway-overfocus split-rt float-rt output-rs
    bindsym $mod+Tab exec sway-overfocus group-rw group-dw
    bindsym $mod+Shift+Tab exec sway-overfocus group-lw group-uw
    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    bindsym $mod+Control+right workspace next
    bindsym $mod+Control+left workspace prev
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    bindsym $mod+Control+Shift+right move container to workspace next
    bindsym $mod+Control+Shift+left move container to workspace prev
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad
    bindsym $mod+Shift+r move floating

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 20px
    bindsym $down resize grow height 20px
    bindsym $up resize shrink height 20px
    bindsym $right resize grow width 20px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 20px
    bindsym Down resize grow height 20px
    bindsym Up resize shrink height 20px
    bindsym Right resize grow width 20px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }
bar {
    swaybar_command waybar
}

include /etc/sway/config.d/*

# polkit
exec --no-startup-id /usr/libexec/polkit-gnome-authentication-agent-1
# keyring
# exec --no-startup-id /usr/bin/gnome-keyring-daemon --start --components=ssh,secrets,pkcs11
exec --no-startup-id /usr/bin/gnome-keyring-daemon --start --components=pkcs11
exec --no-startup-id /usr/bin/gnome-keyring-daemon --start --components=secrets
exec --no-startup-id /usr/bin/gnome-keyring-daemon --start --components=ssh
# exec eval $(gnome-keyring-daemon --start)
# exec export SSH_AUTH_SOCK

# # font
font pango:SourceCodePro Medium 11
# fraction scaling
exec gsettings set org.gnome.desktop.interface text-scaling-factor 1.5

# default_border none
# default_floating_border none
# default_border pixel 7
# Window borders
default_border pixel 3
default_floating_border normal
hide_edge_borders smart

smart_gaps on
gaps inner 10


set $cl_high #009ddc
set $cl_indi #d9d8d8
set $cl_back #231f20
set $cl_fore #d9d8d8
set $cl_urge #ee2e24

# Colors                border   bg       text     indi     childborder
client.focused          $cl_high $cl_high $cl_fore $cl_indi $cl_high
client.focused_inactive $cl_back $cl_back $cl_fore $cl_back $cl_back
client.unfocused        $cl_back $cl_back $cl_fore $cl_back $cl_back
client.urgent           $cl_urge $cl_urge $cl_fore $cl_urge $cl_urge

# enable xwayland
xwayland enable

#                       
# Volume control        
#                       
    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%    
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%    
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle    

    bindsym --locked XF86AudioPlay exec playerctl play-pause
    bindsym --locked XF86AudioNext exec playerctl next
    bindsym --locked XF86AudioPrev exec playerctl previous
#                       
# Brightness Control    
#                       
    bindsym --locked XF86MonBrightnessUp exec --no-startup-id light -A 5
    bindsym --locked XF86MonBrightnessDown exec --no-startup-id light -U 5

bindsym $mod+Shift+s exec grim -g "$(slurp)" -t png - | wl-copy -t image/png
bindsym Print exec grim -o eDP-1 -t png - | wl-copy -t image/png
bindsym $mod+Print exec grim -o eDP-1 -t png $(xdg-user-dir PICTURES)/$(date +'%s_grim.png')

# laptop lid lock screen
set $laptop eDP-1
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable

bindsym $mod+Escape exec swaylock
